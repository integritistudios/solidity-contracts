NOTE: Change ports as required
PORTX
PORTY
PORTZ

echo "///"
echo "/// section 1 - install geth"
echo "///"

sudo mkdir /bsc
sudo chmod 777 /bsc
cd  /bsc
rm -rf *

sudo apt-get update
sudo apt-get install unzip build-essential make gzip -y

wget https://github.com/binance-chain/bsc/archive/refs/tags/v1.0.6.zip
wget https://github.com/binance-chain/bsc/releases/download/v1.0.6/mainnet.zip
wget https://golang.org/dl/go1.16.3.linux-amd64.tar.gz
sudo tar -C /usr/local -xzf go1.16.3.linux-amd64.tar.gz

unzip v1.0.6.zip -d /bsc
mv bsc-1.0.6 bsc106

cd /bsc/bsc106
export PATH=$PATH:/usr/local/go/bin
rm go.sum
go mod tidy
make geth

mv /bsc/mainnet.zip /bsc/bsc106
unzip mainnet.zip
./build/bin/geth --datadir node init genesis.json

cd /bsc/bsc106
echo "./build/bin/geth attach http://52.63.194.167:PORTX" > attach.sh
echo "pkill -9 geth\nnohup ./build/bin/geth --config ./config.toml --datadir ./node --rpc --rpcport 59811 --rpcaddr \"0.0.0.0\" --syncmode \"fast\" --cache=1024 --ws --wsaddr=\"0.0.0.0\" --wsport 59812 --wsorigins \"*\" &" > bsc.sh

echo "///"
echo "/// section 2  - replace the following sections in config.toml"
echo "///"

cd /bsc/bsc106/
pico config.toml

echo "START"

[Eth.TxPool]
Locals = []
NoLocals = true
Journal = "transactions.rlp"
Rejournal = 3600000000000
PriceLimit = 5000000000
PriceBump = 10
AccountSlots = 512
#GlobalSlots = 3000 # 10000
GlobalSlots = 1
AccountQueue = 256
#GlobalQueue = 3000 # 5000
GlobalQueue = 1
Lifetime = 10800000000000

[Node]
IPCPath = "geth.ipc"
HTTPHost = "0.0.0.0"
NoUSB = true
InsecureUnlockAllowed = false
HTTPPort = PORTY
HTTPVirtualHosts = ["*"]
HTTPModules = ["eth", "net", "web3", "txpool", "parlia"]
WSPort = PORTZ
WSModules = ["net", "web3", "eth"]
GraphQLPort = 8557
GraphQLVirtualHosts = ["*"]

[Node.P2P]
StaticNodes = ["enode://f3cfd69f2808ef64838abd8786342c0b22fdd28268703c8d6812e26e109f9a7cb2b37bd49724ebb46c233289f22da82991c87345eb9a2dadeddb8f37eeb259ac@18.180.28.21:30311","enode://f420209bac5324326c116d38d83edfa2256c4101a27cd3e7f9b8287dc8526900f4137e915df6806986b28bc79b1e66679b544a1c515a95ede86f4d809bd65dab@54.178.62.117:30311","enode://4924583cfb262b6e333969c86eab8da009b3f7d165cc9ad326914f576c575741e71dc6e64a830e833c25e8c45b906364e58e70cdf043651fd583082ea7db5e3b@18.180.17.171:30311","enode://f329176b187cec87b327f82e78b6ece3102a0f7c89b92a5312e1674062c6e89f785f55fb1b167e369d71c66b0548994c6035c6d85849eccb434d4d9e0c489cdd@34.253.94.130:30311","enode://cbfd1219940d4e312ad94108e7fa3bc34c4c22081d6f334a2e7b36bb28928b56879924cf0353ad85fa5b2f3d5033bbe8ad5371feae9c2088214184be301ed658@54.75.11.3:30311","enode://352a361a9240d4d23bb6fab19cc6dc5a5fc6921abf19de65afe13f1802780aecd67c8c09d8c89043ff86947f171d98ab06906ef616d58e718067e02abea0dda9@79.125.105.65:30311","enode://21530e423b42aed17d7eef67882ebb23357db4f8b10c94d4c71191f52955d97dc13eec03cfeff0fe3a1c89c955e81a6970c09689d21ecbec2142b26b7e759c45@54.216.119.18:30311","enode://786acbdf5a3cf91b99047a0fd8305e11e54d96ea3a72b1527050d3d6f8c9fc0278ff9ef56f3e56b3b70a283d97c309065506ea2fc3eb9b62477fd014a3ec1a96@107.23.90.162:30311","enode://99b07e9dc5f204263b87243146743399b2bd60c98f68d1239a3461d09087e6c417e40f1106fa606ccf54159feabdddb4e7f367559b349a6511e66e525de4906e@54.81.225.170:30311","enode://1479af5ea7bda822e8747d0b967309bced22cad5083b93bc6f4e1d7da7be067cd8495dc4c5a71579f2da8d9068f0c43ad6933d2b335a545b4ae49a846122b261@52.7.247.132:30311","enode://cfc556867894dc84707c2ce6290740d6ba112b279217e6db420f215397492a91ef76bbfe18ebd349a09b37fc8bfef5740d2d2335838e063094d5b63c3fd20d8f@34.197.85.99:30311","enode://7cf68af17a83f925f34eeced2a139b1d11bac03fd2635707e459a821965b5e6016021a43379f24dc428ebcb84b8fb377517dee6ae484cd276a2f9360dac9c183@52.86.7.102:30311","enode://b2ed83944f4c0e18d6b2f5f6c2e86b0320c10b8a96f897a535b43f25dc625ae739f449765ad86f38a393472638fcef69f30d7af53b02c3545722b1dd6f18f606@34.194.252.9:30311","enode://42deadff5ff5d97ea4245128952335969fafea6c4ddd05146b3cac125099e1b2d1ea42c8d02c11ee8b5272a75d4f4b9f51a99244fd6daf1c6a1d5017242a3d43@101.36.120.67:30311","enode://905f585c09b8eed66afdf8a99acdab7487185357f33d5c9fe40332e4aa4a661382b159ffb300b20fbc12e81505505944ac3bfc7e6673b352d01e09f2df8af5bc@152.32.131.34:30311","enode://e585bafb7ab5a187534d69e84531165e5d4b0ee4f76b21641fe778c53770cd72e1850d44b48ad00c08ca4dc860cd5c5afa04b23a5061303f61d2658b1c48b9b2@152.32.132.171:30311","enode://8fb5dd1259e0672efb8c141434bf0c24c73b338f7c2da15efc2def7403b952d453814230eeb97f555aaed46ee0b0b6e2a8568b518f88bd328729031746114dd2@3.0.236.154:30311"]
MaxPeers = 20

echo "END"

echo "///"
echo "/// section 3  - download the snapshot"
echo "///"

///////// now we start getting the blockchain data snapshot
cd /bsc/
nohup wget "https://binance-smart-chain-snapshot.s3.amazonaws.com/snap.tar.gz" &
echo "WAIT UNTIL THIS IS COMPLETED"
pause

tail -f nohup.out
cd /bsc/bsc106/node/geth/chaindata/
mv /bsc/snap.tar.gz .
tar -xvzf snap.tar.gz

rm snap.tar.gz
cd /bsc/bsc106/node/geth/chaindata/snap-bsc/chaindata 
ls | xargs -i mv -f {} /bsc/bsc106/node/geth/chaindata/

echo "THIS IS NOT NEEDED IF NEVER RUN BEFORE"
cd /bsc/bsc106/node/geth/chaindata/snap-bsc/chaindata/ancient
mv * /bsc/bsc106/node/geth/chaindata/ancient

echo "///"
echo "/// section 4 - start the node"
echo "///"

cd /bsc/bsc106/
sh bsc.sh
tail -f nohup.out
