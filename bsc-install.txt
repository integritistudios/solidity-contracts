
echo "///"
echo "/// section 1 - install geth"
echo "///"

sudo mkdir /bsc
cd bsc
sudo chmod 777 /bsc
cd  /bsc
rm -rf *

sudo apt-get update
sudo apt-get install unzip build-essential make gzip -y

wget https://github.com/binance-chain/bsc/archive/refs/tags/v1.0.6.zip
wget https://github.com/binance-chain/bsc/releases/download/v1.0.6/mainnet.zip
wget https://golang.org/dl/go1.16.3.linux-amd64.tar.gz
sudo tar -C /usr/local -xzf go1.16.3.linux-amd64.tar.gz
export PATH=$PATH:/usr/local/go/bin

unzip v1.0.6.zip -d /bsc
mv bsc-1.0.6 bsc106

cd /bsc/bsc106
make geth

mv /bsc/mainnet.zip /bsc/bsc106
unzip mainnet.zip
./build/bin/geth --datadir node init genesis.json

cd /bsc/bsc106
echo "./build/bin/geth attach http://0.0.0.0:8545" > attach.sh
echo "nohup ./build/bin/geth --config ./config.toml --datadir ./node --rpc --rpcaddr \"0.0.0.0\" --syncmode \"fast\" --cache=1024 --ws --wsaddr=\"0.0.0.0\" --wsport 8546 --wsorigins \"*\" &" > bsc.sh
echo "curl --header \"Content-Type: application/json\" -X POST --data '{\"jsonrpc\":\"2.0\",\"method\":\"eth_syncing\",\"params\":[],\"id\":67}' http://0.0.0.0:8545" > call.sh

echo "///"
echo "/// section 2  - replace the following sections in config.toml"
echo "///"

cd /bsc/bsc106/
pico config.toml

[Eth.TxPool]
Locals = []
NoLocals = true
Journal = "transactions.rlp"
Rejournal = 3600000000000
PriceLimit = 1000000000
PriceBump = 10
AccountSlots = 2048
GlobalSlots = 10000
AccountQueue = 2048
GlobalQueue = 1000000
Lifetime = 10800000000000

[Node]
IPCPath = "geth.ipc"
HTTPHost = "0.0.0.0"
NoUSB = true
InsecureUnlockAllowed = false
HTTPPort = 8545
HTTPVirtualHosts = ["*"]

echo "///"
echo "/// section 3  - download the snapshot"
echo "///"

///////// now we start getting the blockchain data snapshot
cd /bsc/
nohup wget "https://binance-smart-chain-snapshot.s3.amazonaws.com/snap.tar.gz" &
echo "WAIT UNTIL THIS IS COMPLETED"
pause

tail -f nohup.out
cd /bsc/bsc106/node/geth/chaindata/
mv /bsc/snap.tar.gz .
tar -xvzf snap.tar.gz

rm snap.tar.gz
cd /bsc/bsc106/node/geth/chaindata/snap-bsc/chaindata 
ls | xargs -i mv -f {} /bsc/bsc106/node/geth/chaindata/

echo "THIS IS NOT NEEDED IF NEVER RUN BEFORE"
cd /bsc/bsc106/node/geth/chaindata/snap-bsc/chaindata/ancient
mv * /bsc/bsc106/node/geth/chaindata/ancient

echo "///"
echo "/// section 4 - start the node"
echo "///"

cd /bsc/bsc106/
sh bsc.sh
tail -f nohup.out
